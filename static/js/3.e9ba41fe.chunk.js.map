{"version":3,"sources":["actions/index.js","components/sideNavigate/sideNavigate.js","components/breed/breed.js"],"names":["axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","getBreedsList","dispatch","axios","get","then","_ref","data","type","payload","message","catch","error","console","log","concat","getBreedsImages","_ref3","getCurrentBreedsImages","breed","_ref4","clearImages","getSubBreedsList","_ref2","SideNavigate","this","props","match","params","name","oldProp","subname","curProp","sub","subDogs","length","react_default","a","createElement","className","NavLink","to","map","dog","index","key","Component","mapDispatchToProps","actions","withRouter","connect","state","dogSubList","Breed","getData","subbreed","concatbreed","sideNavigate","dogImages","image","src","alt","currentDogImage"],"mappings":"yFAAA,IAAAA,EAAAC,EAAA,IAAAC,EAAAD,EAAAE,EAAAH,GA2DeI,EAAA,GACbC,cArDoB,kBAAM,SAAAC,GAC1BC,IAAMC,IANgB,uCAOnBC,KAAK,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KACNL,EAAS,CACPM,KAAM,mBACNC,QAASF,EAAKG,YAGjBC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAR,kBAAAC,OAA8BH,EAAMF,cA8CtDM,gBAhCsB,kBAAM,SAAAd,GAC5BC,IAAMC,IA1BiB,8CA2BpBC,KAAK,SAAAY,GAAY,IAAVV,EAAUU,EAAVV,KACNL,EAAS,CACPM,KAAM,mBACNC,QAASF,EAAKG,YAGjBC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAR,oBAAAC,OAAgCH,EAAMF,cAyBxDQ,uBAtB6B,SAACC,GAAD,OAAW,SAAAjB,GACxCC,IAAMC,IAAN,GAAAW,OApCwB,4BAoCxB,KAAAA,OAAkCI,EAAlC,YACEd,KAAK,SAAAe,GAAY,IAAVb,EAAUa,EAAVb,KACPL,EAAS,CACRM,KAAM,2BACNC,QAASF,EAAKG,YAGdC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAR,2BAAAC,OAAuCH,EAAMF,cAe/DW,YAZkB,kBAAM,SAAAnB,GACtBA,EAAS,CACLM,KAAM,2BACNC,QAAS,OAUfa,iBA9CuB,SAACH,GAAD,OAAW,SAAAjB,GAClCC,IAAMC,IAAN,GAAAW,OAhB0B,4BAgB1B,KAAAA,OAAoCI,EAApC,UACEd,KAAK,SAAAkB,GAAY,IAAVhB,EAAUgB,EAAVhB,KACPL,EAAS,CACRM,KAAM,uBACNC,QAASF,EAAKG,YAGdC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAR,qBAAAC,OAAiCH,EAAMF,wKCpBrDc,8LAGF,IAAML,EAAQM,KAAKC,MAAMC,MAAMC,OAAOC,KAEtCJ,KAAKC,MAAMJ,iBAAiBH,8CAIXO,GACjB,IAAII,EAAUJ,EAAMC,MAAMC,OAAOG,QAC7BC,EAAUP,KAAKC,MAAMC,MAAMC,OAAOG,QACnCD,IAAYE,GACbP,KAAKC,MAAMzB,cAAc+B,oCAK3B,IAAMb,EAAQM,KAAKC,MAAMC,MAAMC,OAAOC,KAChCI,EAAOR,KAAKC,MAAMQ,QAAQC,OAC7BC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,aAAmD,GAEtD,OACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,kEAAkEE,GAAG,KAAxF,uBAKHR,EACDG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACTd,KAAKC,MAAMQ,QAAQQ,IAAI,SAACC,EAAKC,GAAN,OACpBR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2CAA2CM,IAAKD,GAC5DR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,kEACTE,GAAE,UAAA1B,OAAYI,EAAZ,KAAAJ,OAAqB4B,IAAQA,gBArClCG,aAkDrBC,EAAqB,CACvB9C,cAAe+C,IAAQ/C,cACvBqB,iBAAkB0B,IAAQ1B,kBAIf2B,cAAWC,YAVF,SAACC,GAAD,MAAY,CAChCjB,QAASiB,EAAMC,aASgCL,EAAzBG,CAA6C1B,ICvDjE6B,sMAGF5B,KAAK6B,qDAGY5B,GACHA,EAAMC,MAAMC,OAAOG,UACnBN,KAAKC,MAAMC,MAAMC,OAAOG,SAEpCN,KAAK6B,4CAKP,IAAMnC,EAAQM,KAAKC,MAAMC,MAAMC,OAAOC,MAAQ,GACxC0B,EAAW9B,KAAKC,MAAMC,MAAMC,OAAOG,QACnCyB,EAAcD,GAAQ,GAAAxC,OAAOI,EAAP,KAAAJ,OAAgBwC,GAE5C9B,KAAKC,MAAMR,uBAAuBsC,GAAerC,kDAIjDM,KAAKC,MAAML,+CAIZ,IAAMF,EAAQM,KAAKC,MAAMC,MAAMC,OAAOC,KACrC,OACCO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACmB,EAAD,MACDrB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iEACTH,EAAAC,EAAAC,cAAA,UAAKnB,IAEXiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbd,KAAKC,MAAMgC,UAAUhB,IAAI,SAACiB,EAAOf,GAAR,OACzBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWM,IAAKD,GAC9BR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACLH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCAAuCqB,IAAKD,EAAOE,IAAI,wBAzCtEf,cA2DdC,EAAqB,CACvB7B,uBAAwB8B,IAAQ9B,uBAChCG,YAAa2B,IAAQ3B,aAIV4B,sBAAWC,YAZF,SAACC,GACvB,MAAO,CACLO,UAAWP,EAAMW,kBAU8Bf,EAAzBG,CAA6CG","file":"static/js/3.e9ba41fe.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL_BREEDS_LIST = 'https://dog.ceo/api/breeds/list/all';\r\nconst URL_SUB_BREEDS_LIST = 'https://dog.ceo/api/breed';\r\nconst URL_BREED_IMAGES = 'https://dog.ceo/api/breeds/image/random/30';\r\nconst URL_BREED_CURRENT = 'https://dog.ceo/api/breed';\r\n\r\nconst getBreedsList = () => dispatch => {\r\n  axios.get(URL_BREEDS_LIST)\r\n    .then(({data}) => {\r\n      dispatch({\r\n        type: 'FETCH_BREED_LIST',\r\n        payload: data.message\r\n      });\r\n    })\r\n    .catch(error => console.log(`getBreedsList: ${error.message}`));\r\n};\r\n\r\nconst getSubBreedsList = (breed) => dispatch => {\r\n  axios.get(`${URL_SUB_BREEDS_LIST}/${breed}/list`)\r\n  \t.then(({data}) => {\r\n  \t\tdispatch({\r\n  \t\t\ttype: 'FETCH_SUB_BREED_LIST',\r\n  \t\t\tpayload: data.message\r\n  \t\t});\r\n  \t})\r\n    .catch(error => console.log(`getSubBreedsList: ${error.message}`));\r\n};\r\n\r\nconst getBreedsImages = () => dispatch => {\r\n  axios.get(URL_BREED_IMAGES)\r\n    .then(({data}) => {\r\n      dispatch({\r\n        type: 'FETCH_DOGS_IMAGE',\r\n        payload: data.message\r\n      });\r\n    })\r\n    .catch(error => console.log(`getBreedsImages: ${error.message}`));\r\n};\r\n\r\nconst getCurrentBreedsImages = (breed) => dispatch => {\r\n  axios.get(`${URL_BREED_CURRENT}/${breed}/images`)\r\n  \t.then(({data}) => {\r\n  \t\tdispatch({\r\n  \t\t\ttype: 'FETCH_DOGS_CURRENT_IMAGE',\r\n  \t\t\tpayload: data.message\r\n  \t\t});\r\n  \t})\r\n    .catch(error => console.log(`getCurrentBreedsImages: ${error.message}`));\r\n};\r\n\r\nconst clearImages = () => dispatch => {\r\n    dispatch({\r\n        type: 'FETCH_DOGS_CURRENT_IMAGE',\r\n        payload: []\r\n    })\r\n};\r\n\r\n\r\nexport default {\r\n  getBreedsList,\r\n  getBreedsImages,\r\n  getCurrentBreedsImages,\r\n  clearImages,\r\n  getSubBreedsList\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport actions from '../../actions/index';\r\n// import './sideNavigate.css';\r\n\r\nclass SideNavigate extends Component {\r\n\r\n  componentDidMount(){\r\n    const breed = this.props.match.params.name;\r\n    \r\n    this.props.getSubBreedsList(breed); \r\n  }\r\n\r\n\r\n  componentDidUpdate(props){\r\n    let oldProp = props.match.params.subname;\r\n    let curProp = this.props.match.params.subname;\r\n    if(oldProp !== curProp){\r\n      this.props.getBreedsList(curProp); \r\n    }\r\n  }\r\n\r\n  render(){\r\n    const breed = this.props.match.params.name;    \r\n    const sub = (this.props.subDogs.length) ?\r\n      (<h3 className=\"mt-5 text-center\">Sub-breed</h3>) : '';\r\n\r\n    return (      \r\n      <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n        <div className=\"sidebar-sticky\">\r\n          <ul className=\"navbar-nav flex-column mt-5\">\r\n            <li className=\"nav-item btn btn-light p-0\">\r\n              <NavLink className=\"nav-link text-capitalize text-nowrap font-weight-bold list_item\" to='/'>\r\n                Back to main page\r\n              </NavLink>\r\n              </li>\r\n          </ul>\r\n          {sub}\r\n          <ul className=\"navbar-nav flex-column\">\r\n              {this.props.subDogs.map((dog, index) => (\r\n                  <li className=\"nav-item btn btn-light p-0 border-bottom\" key={index}>\r\n                    <NavLink className=\"nav-link text-capitalize text-nowrap font-weight-bold list_item\" \r\n                              to={`/breed/${breed}/${dog}`}>{dog}</NavLink>\r\n                  </li>))}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    subDogs: state.dogSubList\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getBreedsList: actions.getBreedsList,\r\n    getSubBreedsList: actions.getSubBreedsList\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SideNavigate));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport actions from '../../actions';\r\nimport SideNavigate from '.././sideNavigate/sideNavigate';\r\nimport './breed.css';\r\n\r\nclass Breed extends Component {\r\n\r\n  componentWillMount(){\r\n    this.getData();\r\n  }\r\n\r\n  componentDidUpdate(props){\r\n    let oldProp = props.match.params.subname;\r\n    let curProp = this.props.match.params.subname;\r\n    if(oldProp !== curProp){\r\n      this.getData(); \r\n    }\r\n  }\r\n\r\n  getData(){\r\n    const breed = this.props.match.params.name || '';\r\n    const subbreed = this.props.match.params.subname;\r\n    const concatbreed = subbreed && `${breed}/${subbreed}`;\r\n\r\n    this.props.getCurrentBreedsImages(concatbreed || breed);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.clearImages();\r\n  }\r\n\r\n  render(){\r\n  \tconst breed = this.props.match.params.name;\r\n    return (\r\n    \t<div className=\"row\">\r\n    \t\t<SideNavigate />\r\n\t\t  \t<main className=\"album py-5 col-10\">\r\n\t\t  \t<div className=\"container col-12\">\r\n\t\t  \t\t<div className=\"text-center p-2 text-capitalize bg-secondary text-white mb-2 \">\r\n            <h1>{breed}</h1>\r\n          </div>\r\n\t\t\t  \t<div className=\"row\">\t\t\t  \t\t\r\n\t\t\t  \t\t{this.props.dogImages.map((image, index) => (\r\n\t\t\t  \t\t\t<div className=\"col-md-4\" key={index}>\r\n\t\t\t  \t\t\t\t<div className=\"card mb-4 shadow-sm\">\r\n\t\t\t  \t\t\t\t\t<div className=\"\">\r\n                    <img className=\"card-img-top p-3 col-12 image_height\" src={image} alt='dog'/>\r\n                  </div>\r\n\t\t\t  \t\t\t\t</div>\r\n\t\t\t  \t\t\t</div>))}            \r\n\t\t\t  \t</div>\r\n\t\t\t</div>        \r\n\t\t  </main>\r\n\t\t  </div>\r\n    \t)\r\n  \t}\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dogImages: state.currentDogImage    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getCurrentBreedsImages: actions.getCurrentBreedsImages,\r\n    clearImages: actions.clearImages\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Breed));"],"sourceRoot":""}